# Generated by Django 4.1 on 2023-11-30 01:05

import apps.core.enums
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('birth_date', models.DateField()),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('dni', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_dni', message='Introducza un DNI válido', regex='^\\d{8}[a-zA-Z]$')])),
                ('gender', models.CharField(choices=[('MALE', 'Masculino'), ('FEMALE', 'Femenino'), ('OTHER', 'Otro')], max_length=16)),
                ('request', models.CharField(choices=[('NOT_REQUESTED', 'Sin solicitar'), ('PENDING', 'Pendiente'), ('ACCEPTED', 'Aceptada'), ('DENIED', 'Denegada')], default=apps.core.enums.Request['NOT_REQUESTED'], max_length=16)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(max_length=1024)),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, help_text='Ingresa un valor positivo', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.CharField(choices=[('HOUSE', 'Casa'), ('APARTMENT', 'Apartamento'), ('PENTHOUSE', 'Ático'), ('DUPLEX', 'Dúplex'), ('CHALET', 'Chalet')], max_length=16)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('modification_date', models.DateField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Alojamiento',
                'verbose_name_plural': 'Alojamientos',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.CharField(max_length=8)),
                ('address_line', models.TextField()),
                ('city', models.CharField(max_length=256)),
                ('region', models.CharField(max_length=256)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('postal_code', models.CharField(max_length=16)),
            ],
            options={
                'verbose_name': 'Dirección',
                'verbose_name_plural': 'Direcciones',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(validators=[utils.validators.Validators.validate_future_datetime])),
                ('end_date', models.DateTimeField(validators=[utils.validators.Validators.validate_future_datetime])),
                ('payment_method', models.CharField(choices=[('ONLINE', 'ONLINE'), ('CASH', 'EFECTIVO')], max_length=16)),
                ('amount_people', models.PositiveIntegerField()),
                ('is_active', models.BooleanField()),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('CONFIRMED', 'Confirmada'), ('CANCELLED', 'Cancelada')], default=apps.core.enums.BookingStatus['PENDING'], max_length=16)),
                ('special_requests', models.TextField()),
                ('code', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=1024)),
                ('publication_date', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pendiente'), ('RESOLVED', 'Resuelta'), ('REJECTED', 'Rechazada')], default=apps.core.enums.ClaimStatus['PENDING'], max_length=16)),
                ('response', models.TextField(max_length=1024)),
            ],
            options={
                'verbose_name': 'Reclamación',
                'verbose_name_plural': 'Reclamaciones',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=64)),
                ('description', models.TextField(max_length=1024)),
                ('publication_date', models.DateField(auto_now_add=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('response', models.TextField(max_length=1024)),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Favorito',
                'verbose_name_plural': 'Favoritos',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=64)),
                ('description', models.TextField(max_length=1024)),
                ('order', models.PositiveIntegerField()),
                ('image', models.ImageField(upload_to='images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'jpeg'])])),
                ('alt', models.CharField(max_length=256)),
                ('publication_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Imagen',
                'verbose_name_plural': 'Imágenes',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='core_servic_name_2e1bf5_idx'),
        ),
        migrations.AddField(
            model_name='image',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.accommodation'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.accommodation'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.accommodation'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='claim',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.accommodation'),
        ),
        migrations.AddField(
            model_name='claim',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.accommodation'),
        ),
        migrations.AddField(
            model_name='book',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['city'], name='core_addres_city_402e97_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['region'], name='core_addres_region_3cf6fc_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['postal_code'], name='core_addres_postal__e6c232_idx'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.address'),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accommodation',
            name='service',
            field=models.ManyToManyField(blank=True, to='core.service'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.address'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='image',
            unique_together={('accommodation', 'order')},
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['user'], name='core_favori_user_id_cbe902_idx'),
        ),
        migrations.AddIndex(
            model_name='favorite',
            index=models.Index(fields=['accommodation'], name='core_favori_accommo_f5f42f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('accommodation', 'user')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='core_commen_user_id_98f009_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['accommodation'], name='core_commen_accommo_584ecb_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['user'], name='core_claim_user_id_6cbdc3_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['accommodation'], name='core_claim_accommo_1ab387_idx'),
        ),
        migrations.AddIndex(
            model_name='claim',
            index=models.Index(fields=['status'], name='core_claim_status_f676c8_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['user'], name='core_book_user_id_e67803_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['accommodation'], name='core_book_accommo_c4dd48_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['status'], name='core_book_status_278294_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['name'], name='core_accomm_name_950d8a_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['owner'], name='core_accomm_owner_i_85a983_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['category'], name='core_accomm_categor_df7e94_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['dni'], name='core_custom_dni_87ad59_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['phone'], name='core_custom_phone_b142a0_idx'),
        ),
    ]
